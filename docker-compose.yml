version: "3.1"

services:
  mongo:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    # restart: unless-stopped
    volumes:
      - ./data/mongo:/data/db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    depends_on:
      - mongo
  backend:
    container_name: backend
    build: ./backend
    restart: always
    ports:
      - "3500:3500"
    depends_on:
      - mongo
      - kafka
  frontend:
    container_name: frontend
    stdin_open: true
    build: .
    restart: on-failure
    ports:
      - "3000:3000"
  # # cache:
  # #   image: redis
  # #   ports:
  # #     - "6379:6379"
  kafka:
    image: spotify/kafka
    hostname: kafka
    ports:
      - "2181:2181"
      - "9092:9092"
      - "29092:29092"
    expose:
      - 9092
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: "9092"
      # LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      # LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      # INTER.BROKER.LISTENER.NAME: PLAINTEXT
    volumes:
      - ./data/kafka:/tmp/kafka-logs
  # elastico:
  #   image: elasticsearch:7.6.2
  #   ports:
  #     - "127.0.0.1:9200:9200"
  #     - "9300:9300"
  #   volumes:
  #     - ./data/Elasticsearch/data:/var/lib/elasticsearch
  #     - ./data/Elasticsearch/config/elasticsearch.yml:/etc/elasticsearch/config/elasticsearch.yml
  #   tty: true
  #   environment:
  #     - discovery.type=single-node
  #     - cluster.name=docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
